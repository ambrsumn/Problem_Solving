type Fn = (...params: number[]) => number

function memoize(fn: Fn): Fn {

    const mpp = new Map();
    
    return function(...args) {
        let argument: string = args.toString();
        let output = 0;

        if(mpp.has(argument))
        {
            output = mpp.get(argument)
        }
        else
        {
            output = fn(...args);
            mpp.set(argument, output);
        }

        return output;
    }
}


/** 
 * let callCount = 0;
 * const memoizedFn = memoize(function (a, b) {
 *	 callCount += 1;
 *   return a + b;
 * })
 * memoizedFn(2, 3) // 5
 * memoizedFn(2, 3) // 5
 * console.log(callCount) // 1 
 */